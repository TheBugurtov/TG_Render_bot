const fetch = require('node-fetch');
const { parse } = require('csv-parse/sync');
const express = require('express');

const app = express();

// --- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ---
const BOT_TOKEN = process.env.BOT_TOKEN;
const CSV_URL = 'https://raw.githubusercontent.com/TheBugurtov/Figma-components-to-Google-Sheets/main/components.csv';
const PORT = process.env.PORT || 10000;

// --- –ì–ª–æ–±–∞–ª—å–Ω—ã–π –∫—ç—à –¥–ª—è –¥–∞–Ω–Ω—ã—Ö CSV ---
let componentCache = null;
let lastFetchTime = 0;
const CACHE_TTL = 5 * 60 * 1000; // 5 –º–∏–Ω—É—Ç –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è

// --- –•—Ä–∞–Ω–∏–ª–∏—â–µ —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π ---
const state = {};

// --- –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ---
const mainMenu = {
  reply_markup: {
    keyboard: [
      ['–ù–∞–π—Ç–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç'],
      ['–ò–∑—É—á–∏—Ç—å –≥–∞–π–¥—ã', '–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –¥–æ—Ä–∞–±–æ—Ç–∫—É'],
      ['–î–æ–±–∞–≤–∏—Ç—å –∏–∫–æ–Ω–∫—É –∏–ª–∏ –ª–æ–≥–æ—Ç–∏–ø', '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è'],
      ['–ü–æ–¥–¥–µ—Ä–∂–∫–∞']
    ],
    resize_keyboard: true,
    one_time_keyboard: false
  }
};

// --- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —Å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º ---
async function getComponentData() {
  const now = Date.now();
  
  // –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –≤ –∫—ç—à–µ –∏ –Ω–µ —É—Å—Ç–∞—Ä–µ–ª–∏
  if (componentCache && now - lastFetchTime < CACHE_TTL) {
    return componentCache;
  }
  
  try {
    // –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    const res = await fetch(CSV_URL);
    if (!res.ok) throw new Error(`HTTP error! status: ${res.status}`);
    
    const csvText = await res.text();
    componentCache = parse(csvText, {
      columns: true,
      skip_empty_lines: true,
      bom: true
    });
    
    lastFetchTime = now;
    console.log('–î–∞–Ω–Ω—ã–µ CSV —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã');
    return componentCache;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ CSV:', error);
    
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ, –µ—Å–ª–∏ –µ—Å—Ç—å
    if (componentCache) {
      console.log('–ò—Å–ø–æ–ª—å–∑—É–µ–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏');
      return componentCache;
    }
    
    // –ï—Å–ª–∏ –∫—ç—à–∞ –Ω–µ—Ç - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤
    return [];
  }
}

// --- –§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ (—Å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º) ---
async function searchComponents(query, type) {
  const records = await getComponentData();
  
  if (records.length === 0) {
    console.error('–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–æ–∏—Å–∫–∞');
    return [];
  }

  const q = (query || '').toLowerCase().trim();

  let filtered = records.filter(r => {
    // –£–ª—É—á—à–µ–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–≥–æ–≤
    const tags = (r.Tags || '')
      .replace(/\s*,\s*/g, ',')   // –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ–±–µ–ª–æ–≤ –≤–æ–∫—Ä—É–≥ –∑–∞–ø—è—Ç—ã—Ö
      .toLowerCase()
      .split(',')
      .map(t => t.trim());
    
    // –ò—â–µ–º —Ç–æ—á–Ω–æ–µ –∏–ª–∏ —á–∞—Å—Ç–∏—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
    return tags.some(tag => tag === q || tag.includes(q));
  });

  // –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –∏ –Ω–∞–¥–µ–∂–Ω–∞—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —Ç–∏–ø—É
  if (type === 'mobile') {
    filtered = filtered.filter(r => r.File.trim() === 'App Components');
  } else if (type === 'web') {
    filtered = filtered.filter(r => r.File.trim() !== 'App Components');
  }

  return filtered.map(r => `*${r.Component}* –∏–∑ *${r.File}*\n${r.Link}`);
}

// --- –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram ---
async function sendMessage(chatId, text, extra = {}) {
  await fetch(`https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`, {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({ chat_id: chatId, text, parse_mode: 'Markdown', ...extra })
  });
}

// --- –û—Å–Ω–æ–≤–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π ---
async function handleMessage(msg) {
  if (!msg || !msg.text) return;
  const chatId = msg.chat.id;
  const text = msg.text.trim();
  const lower = text.toLowerCase();

  // --- –ù–∞–∑–∞–¥ ---
  if (lower === '–Ω–∞–∑–∞–¥') {
    state[chatId] = null;
    await sendMessage(chatId, `–í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é:`, mainMenu);
    return;
  }

  // --- –°—Ç–∞—Ä—Ç ---
  if (lower === '/start') {
    state[chatId] = null;
    await sendMessage(chatId, `–î–æ–±—Ä—ã–π –¥–µ–Ω—å!\n–Ø –ø–æ–º–æ—â–Ω–∏–∫ –î–∏–∑–∞–π–Ω-—Å–∏—Å—Ç–µ–º—ã. –ü–æ—Å—Ç–∞—Ä–∞—é—Å—å –ø–æ–º–æ—á—å –≤ —Ä–µ—à–µ–Ω–∏–∏ –ø—Ä–æ–±–ª–µ–º.`, mainMenu);
    return;
  }

  // --- –ù–∞–π—Ç–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç (–Ω–æ–≤—ã–π —Ñ–ª–æ—É: –≤—ã–±–æ—Ä —Ç–∏–ø–∞) ---
  if (lower === '/search' || lower === '–Ω–∞–π—Ç–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç') {
    state[chatId] = 'choose_type';
    await sendMessage(chatId, '–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞:', {
      reply_markup: {
        keyboard: [['–ú–æ–±–∏–ª—å–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç', '–í–µ–±-–∫–æ–º–ø–æ–Ω–µ–Ω—Ç'], ['–ù–∞–∑–∞–¥']],
        resize_keyboard: true
      }
    });
    return;
  }

  // --- –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –ø–æ–∏—Å–∫–∞ ---
  if (state[chatId] === 'choose_type') {
    if (lower === '–º–æ–±–∏–ª—å–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç') {
      state[chatId] = { mode: 'search', type: 'mobile' };
      await sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–æ–±–∏–ª—å–Ω–æ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞:', { reply_markup: { keyboard: [['–ù–∞–∑–∞–¥']], resize_keyboard: true } });
      return;
    }
    if (lower === '–≤–µ–±-–∫–æ–º–ø–æ–Ω–µ–Ω—Ç') {
      state[chatId] = { mode: 'search', type: 'web' };
      await sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–µ–±-–∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞:', { reply_markup: { keyboard: [['–ù–∞–∑–∞–¥']], resize_keyboard: true } });
      return;
    }
    // –µ—Å–ª–∏ –≤ —Ä–µ–∂–∏–º–µ –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –ø—Ä–∏—à—ë–ª –¥—Ä—É–≥–æ–π —Ç–µ–∫—Å—Ç ‚Äî –ø—Ä–æ—Å—Ç–æ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω –≤—ã–±—Ä–∞—Ç—å –∫–Ω–æ–ø–∫—É)
    return;
  }

// --- –ò–∑—É—á–∏—Ç—å –≥–∞–π–¥—ã ---
if (lower === '/guides' || lower === '–∏–∑—É—á–∏—Ç—å –≥–∞–π–¥—ã') {
  state[chatId] = null;
  await sendMessage(chatId,
`–•—Ä–∞–Ω–∏–ª–∏—â–µ –ø—Ä–∞–≤–∏–ª –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –¥–∏–∑–∞–π–Ω-—Å–∏—Å—Ç–µ–º—ã –≤ Figma ‚Äî <a href="https://www.figma.com/design/5ZYTwB6jw2wutqg60sc4Ff/Granat-Guides-WIP?node-id=181-20673">Granat Guides.</a>

–ë—ã—Å—Ç—Ä—ã–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –º–∞—Ç–µ—Ä–∏–∞–ª—ã:

<a href="https://www.figma.com/design/5ZYTwB6jw2wutqg60sc4Ff/Granat-Guides-WIP?node-id=313-8196">–ì–∞–π–¥ –ø–æ —Ç–∏–ø–æ–≥—Ä–∞—Ñ–∏–∫–µ</a>

<a href="https://www.figma.com/design/iqTCxAPRJJm6UlANLlYfva/Variables?node-id=48097-1187">–ò–µ—Ä–∞—Ä—Ö–∏—è —Ü–≤–µ—Ç–∞: c–≤–µ—Ç–ª–∞—è –∏ —Ç–µ–º–Ω–∞—è —Ç–µ–º–∞</a>

–ü—Ä–∞–≤–∏–ª–∞ –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ <a href="https://www.figma.com/design/a3nZmvTc8B9cZcrke9goCE/Icons?node-id=547-206394">–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–Ω—ã—Ö –∏–∫–æ–Ω–æ–∫</a> –∏ <a href="https://www.figma.com/design/a3nZmvTc8B9cZcrke9goCE/Icons?node-id=23895-7907">–ø—Ä–æ–¥—É–∫—Ç–æ–≤—ã—Ö –∏–∫–æ–Ω–æ–∫</a>

<a href="https://www.figma.com/design/5ZYTwB6jw2wutqg60sc4Ff/Granat-Guides-WIP?node-id=154-386">–ö–Ω–æ–ø–∫–∏: –¥–æ–ø—É—Å—Ç–∏–º–∞—è —Ç–µ–º–∏–∑–∞—Ü–∏—è, –∏–µ—Ä–∞—Ö–∏—è, —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –∏ –ø—Ä.</a>

<a href="https://www.figma.com/design/5ZYTwB6jw2wutqg60sc4Ff/Granat-Guides-WIP?node-id=154-385">–°–∫–µ–ª–µ—Ç–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞</a>

<a href="https://www.figma.com/design/oZGlxnWyOHTAgG6cyLkNJh/Web-Components-Molecules-2.0?node-id=141917-4145">–ö–∞—Ä—Ç–æ—á–∫–∏ –≤ –≤–µ–±–µ</a>

<a href="https://www.figma.com/design/5ZYTwB6jw2wutqg60sc4Ff/Granat-Guides-WIP?node-id=178-386">–ú–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞</a>

<a href="https://www.figma.com/design/5ZYTwB6jw2wutqg60sc4Ff/Granat-Guides-WIP?node-id=659-70">–¶–≤–µ—Ç–æ–≤–æ–µ –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–æ–≤</a>
`,
  { 
    reply_markup: { keyboard: [['–ù–∞–∑–∞–¥']], resize_keyboard: true },
    parse_mode: 'HTML'
  }
  );
  return;
}


// --- –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –¥–æ—Ä–∞–±–æ—Ç–∫—É ---
if (lower === '/suggest' || lower === '–ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –¥–æ—Ä–∞–±–æ—Ç–∫—É') {
  state[chatId] = null;
  await sendMessage(chatId,
`‚û°Ô∏è –ù–∞—à–ª–∏ –±–∞–≥ –≤ —Ä–∞–±–æ—Ç–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ Granat –≤ Figma?
–ó–∞–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –Ω–∞ –¥–æ—Ä–∞–±–æ—Ç–∫—É <a href="https://gitlab.services.mts.ru/digital-products/design-system/support/design/-/issues/new">–≤ GitLab.</a>

‚û°Ô∏è –ï—Å—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –∏–ª–∏ –¥–æ—Ä–∞–±–æ—Ç–∞—Ç—å —Ç–µ–∫—É—â–∏–π?
–û–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å <a href="https://www.figma.com/design/Bew9jPI8yO0fclFUBJ22Nu/DS-Components-Process?node-id=4217-110&t=GlXxEhaJGkfzNspM-4">—Å –±–ª–æ–∫-—Å—Ö–µ–º–æ–π –ø—Ä–∏–Ω—è—Ç–∏—è —Ä–µ—à–µ–Ω–∏–π.</a> –ï—Å–ª–∏ –≤–∞—à–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –Ω–æ—Å–∏—Ç –ª–æ–∫–∞–ª—å–Ω—É—é —Å–ø–µ—Ü–∏—Ñ–∏–∫—É, –∑–∞–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –Ω–∞ –¥–æ—Ä–∞–±–æ—Ç–∫—É <a href="https://gitlab.services.mts.ru/digital-products/design-system/support/design/-/issues/new">–≤ GitLab.</a>

–î–ª—è —Ä–∞–±–æ—Ç—ã —Å gitlab.services.mts.ru –Ω—É–∂–Ω–æ –≤–∫–ª—é—á–∞—Ç—å –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π VPN –∏ –±—ã—Ç—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–º –ø–æ–¥ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–º –ª–æ–≥–∏–Ω–æ–º –∏ –ø–∞—Ä–æ–ª–µ–º.

üîó –ß—Ç–æ–±—ã –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—è –±—ã–ª–∞ –±—ã—Å—Ç—Ä–æ–π –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–π, –ø—Ä–æ—Å–∏–º –ø—Ä–∏–∫–ª–∞–¥—ã–≤–∞—Ç—å –ø—Ä—è–º—ã–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –≤—Å–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã, –∫–∞—Å–∞—é—â–∏–µ—Å—è –∑–∞–ø—Ä–æ—Å–∞: –º–∞–∫–µ—Ç –¥–æ –∏ –ø–æ—Å–ª–µ, best practices, –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ, —Å–∫—Ä–∏–Ω—ã –∏–ª–∏ –≤–∏–¥–µ–æ.

‚è≥ –ö–æ–º–∞–Ω–¥–∞ –¥–∏–∑–∞–π–Ω-—Å–∏—Å—Ç–µ–º—ã —Ä–µ–∞–≥–∏—Ä—É–µ—Ç –Ω–∞ –∑–∞–ø—Ä–æ—Å –≤ –ø–æ—Ä—è–¥–∫–µ –æ—á–µ—Ä–µ–¥–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 3 —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π.
`,
  {
    reply_markup: { keyboard: [['–ù–∞–∑–∞–¥']], resize_keyboard: true },
    parse_mode: 'HTML'
  }
  );
  return;
}


// --- –î–æ–±–∞–≤–∏—Ç—å –∏–∫–æ–Ω–∫—É –∏–ª–∏ –ª–æ–≥–æ—Ç–∏–ø ---
if (lower === '/icon' || lower === '–¥–æ–±–∞–≤–∏—Ç—å –∏–∫–æ–Ω–∫—É –∏–ª–∏ –ª–æ–≥–æ—Ç–∏–ø') {
  state[chatId] = null;
  await sendMessage(chatId,
`‚û°Ô∏è –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å–Ω—ã–µ –∏–∫–æ–Ω–∫–∏

–ù–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–Ω—ã–µ –∏–∫–æ–Ω–∫–∏ –ø—Ä–æ–¥—É–∫—Ç —Å–æ–∑–¥–∞–µ—Ç —Å–≤–æ–∏–º–∏ —Å–∏–ª–∞–º–∏ –∏–ª–∏ –Ω–∞–Ω–∏–º–∞–µ—Ç –ø–æ–¥—Ä—è–¥—á–∏–∫–∞. –°–æ–∑–¥–∞–Ω–Ω—ã–µ –∏–∫–æ–Ω–∫–∏ –ø—Ä–æ—Ö–æ–¥—è—Ç —Ä–µ–≤—å—é –∏ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏–µ —É –¥–∏–∑–∞–π–Ω –ª–∏–¥–∞ –∏–ª–∏ –∞—Ä—Ç-–¥–∏—Ä–µ–∫—Ç–æ—Ä–∞ –ø—Ä–æ–¥—É–∫—Ç–∞.
–û–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å <a href="https://gitlab.services.mts.ru/digital-products/design-system/support/design/-/issues/new">—Å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º–∏ –∫ –∏–∫–æ–Ω–∫–∞–º.</a>

–ò–∫–æ–Ω–∫–∞ –Ω–∞—Ä–∏—Å–æ–≤–∞–Ω–∞?

–î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏—é –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è <a href="https://gitlab.services.mts.ru/digital-products/design-system/support/design/-/issues/new">GitLab.</a> –ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ –∫ –∑–∞–ø—Ä–æ—Å—É —Å—Å—ã–ª–∫—É –Ω–∞ –≥–æ—Ç–æ–≤—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç.

–î–∏–∑–∞–π–Ω-—Å–∏—Å—Ç–µ–º–∞ —Å–ø–ª–∞–Ω–∏—Ä—É–µ—Ç —Ä–µ–≤—å—é –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –≤ —Å–ø—Ä–∏–Ω—Ç –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —Ç–µ–∫—É—â–∏–º–∏ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞–º–∏. –ü—Ä–∏ —É—Å–ø–µ—à–Ω–æ–º –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–∏ —Ä–µ–≤—å—é –¥–∏–∑–∞–π–Ω–µ—Ä –î–° –¥–æ–±–∞–≤–∏—Ç –∏–∫–æ–Ω–∫—É –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫—É –∏ –æ–ø—É–±–ª–∏–∫—É–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ. –ï—Å–ª–∏ –∏–∫–æ–Ω–∫–∞ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –≥–∞–π–¥–∞–º, –¥–∏–∑–∞–π–Ω–µ—Ä –î–° –æ—Å—Ç–∞–≤–∏—Ç —Ñ–∏–¥–±–µ–∫ –≤ –≤–∏–¥–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –∫ –∑–∞–ø—Ä–æ—Å—É –ø—Ä–æ–¥—É–∫—Ç–∞ –≤ GitLab.

‚û°Ô∏è –ü—Ä–æ–¥—É–∫—Ç–æ–≤—ã–µ –∏–∫–æ–Ω–∫–∏ –∏ –ª–æ–≥–æ—Ç–∏–ø—ã

–ü—Ä–æ–¥—É–∫—Ç–æ–≤—ã–µ –∏–∫–æ–Ω–∫–∏ –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π —Å–æ–∑–¥–∞—é—Ç—Å—è –ø–æ <a href="https://gitlab.services.mts.ru/digital-products/design-system/support/design/-/issues/new">—ç–∫–æ—Å–∏—Å—Ç–µ–º–Ω–æ–º—É –≥–∞–π–¥—É.</a>
–î–ª—è –ª–æ–≥–æ—Ç–∏–ø–æ–≤ –≤–µ–±-—Å–µ—Ä–≤–∏—Å–æ–≤ —Å—É—â–µ—Å—Ç–≤—É—é—Ç <a href="https://www.figma.com/design/a3nZmvTc8B9cZcrke9goCE/Icons?node-id=29711-16375&t=DumT4AudgflUKzRs-4">–∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã-—à–∞–±–ª–æ–Ω—ã.</a>

–õ—é–±—É—é –Ω–æ–≤—É—é –∏–∫–æ–Ω–∫—É –∏–ª–∏ –ª–æ–≥–æ—Ç–∏–ø –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–≥–ª–∞—Å–æ–≤–∞—Ç—å —Å –î–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–æ–º –ú–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã—Ö –ö–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–π.

–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç–æ–≤—É—é –∏–∫–æ–Ω–∫—É –∏–ª–∏ –ª–æ–≥–æ—Ç–∏–ø –≤ –î–°, —Å–æ–∑–¥–∞–π—Ç–µ –∑–∞–ø—Ä–æ—Å <a href="https://www.figma.com/design/a3nZmvTc8B9cZcrke9goCE/Icons?node-id=29711-16375&t=DumT4AudgflUKzRs-4">–≤ GitLab.</a>
`,
  {
    reply_markup: { keyboard: [['–ù–∞–∑–∞–¥']], resize_keyboard: true },
    parse_mode: 'HTML'
  }
  );
  return;
}


  // --- –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è ---
  if (lower === '/changes' || lower === '–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è') {
    state[chatId] = null;
    await sendMessage(chatId, '–ü–æ—Å–ª–µ–¥–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ DS GRANAT: https://t.me/c/1397080567/12194');
    return;
  }

// --- –ü–æ–¥–¥–µ—Ä–∂–∫–∞ ---
if (lower === '/support' || lower === '–ø–æ–¥–¥–µ—Ä–∂–∫–∞') {
  state[chatId] = null;
  await sendMessage(chatId,
`‚û°Ô∏è –ó–∞–∫—Ä—ã—Ç–∞—è –≥—Ä—É–ø–ø–∞ DS Community –≤ Telegram

–î–æ–±–∞–≤—å—Ç–µ—Å—å –≤ –∫–æ–º–º—å—é–Ω–∏—Ç–∏ –¥–∏–∑–∞–π–Ω-—Å–∏—Å—Ç–µ–º—ã –≤ Telegram. –ó–¥–µ—Å—å –≤—ã —Å–º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –≤—Å—é —Å–∞–º—É—é —Å–≤–µ–∂—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –Ω–æ–≤–æ—Å—Ç–∏ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è, –∑–∞–¥–∞–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º –∏ –¥–∏–∑–∞–π–Ω–µ—Ä–∞–º, –∞ —Ç–∞–∫–∂–µ –æ–±—â–∞—Ç—å—Å—è —Å –∫–æ–ª–ª–µ–≥–∞–º–∏, –∫–æ—Ç–æ—Ä—ã–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç –¥–∏–∑–∞–π–Ω-—Å–∏—Å—Ç–µ–º—É.

1. <a href="https://confluence.mts.ru/pages/viewpage.action?pageId=607687434">–ê–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å –≤ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–º –±–æ—Ç–µ</a>
2. <a href="https://t.me/+90sy0C1fFPwzNTY6">–í—Å—Ç—É–ø–∏—Ç–µ –≤ –≥—Ä—É–ø–ø—É DS Community</a>

–ï—Å–ª–∏ –Ω–µ –º–æ–∂–µ—Ç–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è –≤ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–º –±–æ—Ç–µ,¬†<a href="https://confluence.mts.ru/pages/viewpage.action?pageId=607687434">–æ–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π.</a>

‚û°Ô∏è –ü–æ –≤–æ–ø—Ä–æ—Å–∞–º –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –Ω–∞ –ø–æ—á—Ç—É kuskova@mts.ru
–ö—É—Å–∫–æ–≤–∞ –Æ–ª–∏—è ‚Äî Design Lead –ú–¢–° GRANAT
`,
  {
    reply_markup: { keyboard: [['–ù–∞–∑–∞–¥']], resize_keyboard: true },
    parse_mode: 'HTML'
  }
  );
  return;
}


  // --- –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–∏—Å–∫–∞ —Ç–æ–ª—å–∫–æ –≤ —Ä–µ–∂–∏–º–µ search (—Å —É—á—ë—Ç–æ–º —Ç–∏–ø–∞) ---
  if (typeof state[chatId] === 'object' && state[chatId].mode === 'search') {
    const results = await searchComponents(text, state[chatId].type);
    if (results.length === 0) {
      await sendMessage(chatId, `–ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –ø–æ –∑–∞–ø—Ä–æ—Å—É "${text}" –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ–ª–µ–µ –æ–±—â–∏–π –∑–∞–ø—Ä–æ—Å, –Ω–∞–ø—Ä–∏–º–µ—Ä "–ö–Ω–æ–ø–∫–∞", "Checkbox" –∏ —Ç.–ø.`);
    } else {
      await sendMessage(chatId, `–ù–∞–π–¥–µ–Ω–æ: ${results.length}\n\n${results.join('\n\n')}`);
    }
    return;
  }

  // –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–¥–æ—à–ª–æ ‚Äî –º–æ–ª—á–∏–º (–Ω–µ –∑–∞–ø—É—Å–∫–∞–µ–º –ø–æ–∏—Å–∫ –≤–Ω–µ —Ä–µ–∂–∏–º–∞ –ø–æ–∏—Å–∫–∞)
  return;
}

// --- –ü—É–ª–ª–∏–Ω–≥ Telegram (getUpdates) ---
async function poll() {
  let offset = 0;

  while (true) {
    try {
      const res = await fetch(`https://api.telegram.org/bot${BOT_TOKEN}/getUpdates?timeout=30&offset=${offset}`);
      const data = await res.json();

      if (data.ok && data.result.length > 0) {
        for (const update of data.result) {
          if (update.message && update.message.text) {
            handleMessage(update.message);
            offset = update.update_id + 1;
          }
        }
      }
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ getUpdates:', err);
    }

    await new Promise(r => setTimeout(r, 1000));
  }
}

// --- Web Endpoint –¥–ª—è Render ---
app.get('/', (req, res) => {
  res.send('Bot is running...');
});

app.listen(PORT, () => {
  console.log(`Bot listening on port ${PORT}`);
  poll(); // —Å—Ç–∞—Ä—Ç –ø—É–ª–ª–∏–Ω–≥–∞ –ø–æ—Å–ª–µ —Å—Ç–∞—Ä—Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞
});